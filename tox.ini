[tox]
envlist = py35,py36,py37,flake8,pylint,doc8,packaging,docs
minversion = 2.7.0

## Configure test + coverage process

[pytest]
addopts = -ra -q --color=yes
norecursedirs = .* *.egg* config docs dist build
xfail_strict = True
rsyncdirs = src tests
looponfailroots = src tests

[coverage:run]
branch = True
source =
    src
    tests
omit = **/_[a-zA-Z0-9]*.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Don't complain if tests don't hit defensive assertion code:
    pass
    raise AssertionError
    raise NotImplementedError

[testenv]
description = Run tests with coverage with pytest under current Python env
setenv = COVERAGE_FILE=.coverage.{envname}
passenv = CI TRAVIS TRAVIS_*
deps =
    -rtests/requirements.txt
    coverage
commands =
    pip install -U {toxinidir}/tests/functional/gradient_descent_algo
    coverage run --parallel-mode -m pytest -vv --ignore tests/functional/backward_compatibility --timeout=180
    coverage combine
    coverage report -m

[testenv:backward-compatibility]
description = Run all versions of Orion to assert backward compatibility
setenv = COVERAGE_FILE=.coverage.backward_compatibility
passenv = CI TRAVIS TRAVIS_* ORION_DB_TYPE
deps =
    -rtests/requirements.txt
    coverage
commands =
    coverage run --parallel-mode -m pytest -vv tests/functional/backward_compatibility/test_versions.py
    coverage combine
    coverage report -m

[testenv:demo-random]
description = Run a demo with random search algorithm
setenv = COVERAGE_FILE=.coverage.random
passenv = CI TRAVIS TRAVIS_*
deps =
    -rtests/requirements.txt
    coverage
commands =
    coverage run --parallel-mode src/orion/core/cli/__init__.py hunt --config tests/functional/demo/orion_config_random.yaml tests/functional/demo/black_box.py -x~'normal(30, 5)'
    coverage combine
    coverage report -m

[testenv:final-coverage]
description = Combine coverage data across environments (run after tests)
skip_install = True
setenv = COVERAGE_FILE=.coverage
passenv = {[testenv]passenv}
deps = coverage
commands =
    coverage erase
    coverage combine
    coverage report -m
    coverage xml

[testenv:codecov]
description = Upload coverage data to codecov (only run on CI)
setenv =
    {[testenv:final-coverage]setenv}
passenv = {[testenv]passenv}
deps = codecov
commands = codecov --required

## Setup development process

[testenv:devel]
description = Incremental devel env command, defaults to running tests
deps =
    -rtests/requirements.txt
usedevelop = True
commands =
    pip install -U {toxinidir}/tests/functional/gradient_descent_algo
    python setup.py test --addopts '-vvv --exitfirst --looponfail {posargs}'

## Configure linters

[flake8]
count = True
show-source = True
doctests = True
# select = E, F, W, C90, I, D, B, B902
ignore =
    # Missing docstring in __init__
    D107
    # blank-line after doc summaries (annoying for modules' doc)
    D205
    # conflicts with D211: No blank lines allowed before class docstring
    D203
    # do not enforce first-line-period at module docs
    D400
    # conflicts with E133: closing bracket is missing indentation
    E123
exclude =
    .tox,
    .git,
    __pycache__,
    docs,
    config,
    build,
    dist,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs,
    src/orion/core/_version.py,
    src/orion/core/utils/_appdirs.py
max-line-length = 100
# McCabe complexity checker
max-complexity = 20
# flake8-import-order: style
import-order-style = google
# flake8-import-order: local module name checker
application-import-names = orion, versioneer

[testenv:flake8]
description = Use flake8 linter to impose standards on the project
basepython = python3.6
skip_install = true
deps =
    pydocstyle == 3.0.0
    flake8 == 3.5.0
    flake8-import-order == 0.15
    flake8-docstrings == 1.1.0
    flake8-bugbear == 17.4.0
commands =
    flake8 docs/ src/orion/ tests/ setup.py

[testenv:pylint]
description = Perform static analysis and output code metrics
basepython = python3.6
skip_install = false
deps =
    pylint == 1.8.1
commands =
    pylint src/orion/core src/orion/client src/orion/algo

[doc8]
max-line-length = 100
file-encoding = utf-8

[testenv:doc8]
description = Impose standards on *.rst documentation files
basepython = python3.6
skip_install = true
deps =
    -rdocs/requirements.txt
    doc8 == 0.8.0
commands =
    doc8 docs/src/

[testenv:packaging]
description = Check whether README.rst is reST and missing from MANIFEST.in
basepython = python3.6
deps =
    check-manifest
    readme_renderer
commands =
    check-manifest
    python setup.py check -r -s

[testenv:lint]
description = Lint code and docs against some standard standards
basepython = python3.6
skip_install = false
deps =
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:doc8]deps}
    {[testenv:packaging]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
    {[testenv:doc8]commands}
    {[testenv:packaging]commands}

## Documentation macros

[testenv:docs]
description = Invoke sphinx to build documentation and API reference
basepython = python3.6
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -W --color -c docs/src/ -b html docs/src/ docs/build/html
    sphinx-build -W --color -c docs/src/ -b man docs/src/ docs/build/man

[testenv:serve-docs]
description = Host project's documentation and API reference in localhost
basepython = python3.6
skip_install = true
changedir = docs/build/html
deps =
commands =
    python -m http.server 8000 --bind 127.0.0.1

## Release tooling (to be removed in favor of CI with CD)

[testenv:build]
basepython = python3.6
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel

[testenv:release]
basepython = python3.6
skip_install = true
deps =
    {[testenv:build]deps}
    twine >= 1.5.0
commands =
    {[testenv:build]commands}
    twine upload --skip-existing dist/*
