[tox]
envlist = py36,py37,py38,flake8,pylint,doc8,packaging,docs
minversion = 2.7.0

#########################################################
# Tox environments
#########################################################

[testenv]
description = Run tests with coverage with pytest under current Python env
passenv = CI TRAVIS TRAVIS_*
deps =
    -rtests/requirements.txt
    -rexamples/scikitlearn-iris/requirements.txt
commands =
    pip install -U {toxinidir}/tests/functional/gradient_descent_algo
    pytest --cov-config=.coveragerc -vv --ignore tests/functional/backward_compatibility --ignore tests/stress --timeout=180 {posargs}

[testenv:backward-compatibility]
description = Run all versions of Orion to assert backward compatibility
passenv = CI TRAVIS TRAVIS_* ORION_DB_TYPE
deps =
    -rtests/requirements.txt
commands =
    pytest --cov-config=.coveragerc -vv tests/functional/backward_compatibility/test_versions.py

[testenv:stress]
description = Run stress test of Orion
deps =
    -rtests/stress/requirements.txt
commands =
    python tests/stress/client/stress_experiment.py

# Linting & Verification environments
[testenv:lint]
description = Lint code and docs against some standard standards
basepython = python3
skip_install = false
deps =
    {[testenv:flake8]deps}
    {[testenv:pylint]deps}
    {[testenv:doc8]deps}
    {[testenv:packaging]deps}
commands =
    {[testenv:flake8]commands}
    {[testenv:pylint]commands}
    {[testenv:doc8]commands}
    {[testenv:packaging]commands}

[testenv:flake8] # Will use the configuration file `.flake8` automatically
description = Use flake8 linter to impose standards on the project
basepython = python3
skip_install = true
deps =
    flake8 == 3.8.*
    flake8-import-order == 0.18.*
    flake8-docstrings == 1.5.*
    flake8-bugbear == 20.1.*
commands =
    flake8 docs/ src/orion/ tests/ setup.py

[testenv:pylint] # Will use the configuration file `.pylintrc` automatically
description = Perform static analysis and output code metrics
basepython = python3
skip_install = false
deps =
    pylint == 2.5.*
commands =
    pylint src/orion/core src/orion/client src/orion/algo

[testenv:doc8]
description = Impose standards on *.rst documentation files
basepython = python3
skip_install = true
deps =
    -rdocs/requirements.txt
    doc8 == 0.8.*
commands =
    doc8 docs/src/

[testenv:packaging]
description = Check whether README.rst is reST and missing from MANIFEST.in
basepython = python3
deps =
    check-manifest
    readme_renderer
commands =
    check-manifest
    python setup.py check -r -s

## Development environments
[testenv:devel]
description = Incremental devel env command, defaults to running tests
deps =
    -rtests/requirements.txt
    -rexamples/scikitlearn-iris/requirements.txt
usedevelop = True
commands =
    pip install -U {toxinidir}/tests/functional/gradient_descent_algo
    python setup.py test --addopts '-vvv --exitfirst --looponfail {posargs}'

# Documentation environments
[testenv:docs]
description = Invoke sphinx to build documentation and API reference
basepython = python3
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -W --color -c docs/src/ -b html docs/src/ docs/build/html
# sphinx-build -W --color -c docs/src/ -b man docs/src/ docs/build/man

[testenv:serve-docs]
description = Host the documentation of the project and API reference in localhost
basepython = python3
skip_install = true
changedir = docs/build/html
deps =
commands =
    python -m http.server 8000 --bind 127.0.0.1

# Release environments (to be removed in favor of CI with CD)
[testenv:build]
basepython = python3
skip_install = true
deps =
    wheel
    setuptools
commands =
    python setup.py -q sdist bdist_wheel

[testenv:release]
basepython = python3
skip_install = true
deps =
    {[testenv:build]deps}
    twine >= 1.5.0
commands =
    {[testenv:build]commands}
    twine upload --skip-existing dist/*

#########################################################
# Packages & Tools configuration
#########################################################

# Pytest configuration
[pytest]
addopts = -ra -q --color=yes
norecursedirs = .* *.egg* config docs dist build
xfail_strict = True
rsyncdirs = src tests
looponfailroots = src tests examples


# Doc8 configuration
[doc8]
max-line-length = 100
file-encoding = utf-8
