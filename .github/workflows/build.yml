name: build

on:
  schedule:
      - cron: '44 4 * * *'
  pull_request:
    branches:
      - master
      - develop
  release:
    types:
      [published]
  workflow_dispatch:

jobs:
  pretest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toxenv: [black, isort, pylint, doc8, docs]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
    - name: Test with tox
      run: tox -e ${{ matrix.toxenv }}
  test:
    needs: pretest
    runs-on: ${{ matrix.platform }}
    strategy:
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]
    env:
      PLATFORM: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
    - name: Test with tox
      run: tox -e py-all
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        env_vars: PLATFORM,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false

  test-algo:
    needs: pretest
    runs-on: ${{ matrix.platform }}
    strategy:
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]
        algo: [nevergrad]
    env:
      PLATFORM: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v1

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

    - name: Test with tox
      run: tox -e algo -- tests/unittests/algo/long/${{ matrix.algo }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        env_vars: PLATFORM,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false

  test_no_extras:
    needs: pretest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
    - name: Test with tox
      run: tox -e py
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        env_vars: PLATFORM,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false
  mongodb:
    needs: pretest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Setup MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.2
      - name: Configure MongoDB
        run: mongo orion_test --eval 'db.createUser({user:"user",pwd:"pass",roles:["readWrite"]});'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Test with tox
        run: tox -e mongodb
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: backward
          env_vars: PLATFORM,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
  backward-compatibility:
    needs: pretest
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        orion_db_type: [mongodb, pickleddb]
    env:
      ORION_DB_TYPE: ${{ matrix.orion_db_type }}
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Setup MongoDB
      uses: supercharge/mongodb-github-action@1.3.0
      with:
        mongodb-version: 4.2
    - name: Configure MongoDB
      run: mongo orion_test --eval 'db.createUser({user:"user",pwd:"pass",roles:["readWrite"]});'
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
    - name: Test with tox
      run: tox -e backward-compatibility
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: backward
        env_vars: PLATFORM,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false
  pypi:
    needs: [test, backward-compatibility, test-algo]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
    - name: Test packaging
      run: tox -e packaging
    - name: Build
      run: tox -e build
    - name: Publish distribution ðŸ“¦ to Test PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/
    - name: Publish distribution ðŸ“¦ to PyPI
      if: startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
  conda:
    needs: [test, backward-compatibility, test-algo]
    runs-on: ubuntu-latest
    env:
        ANACONDA_TOKEN: ${{ secrets.anaconda_token }}
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Build conda
      run: ./conda/ci_build.sh
    - name: Publish distribution ðŸ“¦ to Conda
      if: startsWith(github.ref, 'refs/tags')
      run: ./conda/upload.sh
